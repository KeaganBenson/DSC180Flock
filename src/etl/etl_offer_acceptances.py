# -*- coding: utf-8 -*-
"""etl_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fdWKZkrSzHd5PtJGjJMJgbP9KjE8AG3F
"""

#!/usr/bin/env python
# coding: utf-8

# In[1]:

import os
import gdown
from bs4 import BeautifulSoup  
import requests
import pandas as pd
import requests
import zipfile
import io

google_colab = 0
if google_colab == 1:
    # Load the Drive helper and mount
    from google.colab import drive
    mounted_path_folder = '/content/drive'
    drive.mount(mounted_path_folder, force_remount=True)
    path_folder = "/content/drive/MyDrive/dsprojects/dsproject_ff_geo/current/" # parent of current src folder
else:
    path_folder = "..//..//"
import sys
sys.path.insert(0, path_folder+"/src/etl")

def download_file_from_google_drive_share_link_to_file_path(url, filepath):
    gdown.download(url=url, output=filepath, quiet=False, fuzzy=True)

def get_file_path(path_folder, filename):
    path_file = os.path.join(path_folder, filename)
    return path_file

def test_data_creator(path_folder):
    filename_offer_acceptance_orders = "offer_acceptance_orders.csv"
    
    filename_offer_acceptance_offers = "offer_acceptance_offers.csv"
    
    path_file_offer_acceptance_orders = get_file_path(path_folder, filename_offer_acceptance_orders)
    path_file_offer_acceptance_offers = get_file_path(path_folder, filename_offer_acceptance_offers)
    
    df = pd.read_csv(path_file_offer_acceptance_orders)
    df = df.head(100)
    df["TRANSPORT_MODE"] = "PTL"
    df["ORIGIN_3DIGIT_ZIP"] = df["ORIGIN_3DIGIT_ZIP"].astype(str).str.zfill(3)
    df["DESTINATION_3DIGIT_ZIP"] = df["DESTINATION_3DIGIT_ZIP"].astype(str).str.zfill(3)

    df["ORIGIN_3DIGIT_ZIP"][0] = "00a"
    df["DESTINATION_3DIGIT_ZIP"][0] = "00a"

    df["REFERENCE_NUMBER"] = ['''[a{0}]'''.format(str(i//2)) for i in range(100)]
    df.to_csv(path_file_offer_acceptance_orders, index=False)

    df = pd.read_csv(path_file_offer_acceptance_offers)
    df = df.head(100)
    df["LOAD_DELIVERED_FROM_OFFER"] = True
    df["REFERENCE_NUMBER"] = ['''[a{0}]'''.format(str(i//2)) for i in range(100)]
    df.to_csv(path_file_offer_acceptance_offers, index=False)

def get_county_weather_data(args):
    path_folder_data = args["path_folder_data"]
    path_folder_data_raw = os.path.join(path_folder_data,"raw")
    folder_name_county_weather_data = "county_weather_data"
    zipped_folder_name_county_weather_data = "county_weather_data.zip"
    county_weather_data_google_drive_url = "https://drive.google.com/file/d/19gdziTpRmPo2iCCOI2BLwm79eOnM89Be/view?usp=sharing"

    path_zipped_folder_county_weather_data = os.path.join(path_folder_data_raw,zipped_folder_name_county_weather_data)
    path_folder_county_weather_data = os.path.join(path_folder_data_raw,folder_name_county_weather_data)

    
    os.mkdir(path_folder_county_weather_data)
    #path_file_county_weather_data = os.path.join(path_folder_county_weather_data,file_name_county_weather_data)

    download_file_from_google_drive_share_link_to_file_path(county_weather_data_google_drive_url, path_zipped_folder_county_weather_data)

    print(os.listdir(path_folder_data_raw))

    # assert 0

    with zipfile.ZipFile(path_zipped_folder_county_weather_data,"r") as f:
        f.extractall(path_folder_data_raw)
        f.close()

def get_county_census_data(args):
    path_folder_data = args["path_folder_data"]
    path_folder_data_raw = os.path.join(path_folder_data,"raw")
    folder_name_county_census_data = "county_census_data"
    file_name_county_census_data = "county_census_data.xlsx"
    county_census_data_google_drive_url = "https://docs.google.com/spreadsheets/d/1-U0ZA8b1sYI1RlUIIvik_PELOz92TQaR/edit?usp=sharing&ouid=118247173478054444170&rtpof=true&sd=true"
    
    path_folder_county_census_data = os.path.join(path_folder_data_raw,folder_name_county_census_data)
    os.mkdir(path_folder_county_census_data)
    path_file_county_census_data = os.path.join(path_folder_county_census_data,file_name_county_census_data)

    download_file_from_google_drive_share_link_to_file_path(county_census_data_google_drive_url, path_file_county_census_data)

def get_county_census_file_download_href(soup):
    temp_finder = soup.find_all('span', text = " United States ")[0]
    temp_finder = temp_finder.parent
    shapefile_download_href = temp_finder.find_all("a",text="shapefile")[0]["href"]
def get_county_census_data(args):
    path_folder_data = args["path_folder_data"]
    path_folder_data_raw = os.path.join(path_folder_data,"raw")
    folder_name_county_census_data = "county_census_data"
    file_name_county_census_data = "county_census_data.xlsx"
    
    path_folder_county_census_data = os.path.join(path_folder_data_raw,folder_name_county_census_data)
    os.mkdir(path_folder_county_census_data)
    path_file_county_census_data = os.path.join(path_folder_county_census_data,file_name_county_census_data)

    try:
        url = "https://www.census.gov/data/tables/time-series/demo/popest/2020s-counties-total.html"
        page = requests.get(url)
        soup = BeautifulSoup(page.text, 'html.parser')

        items = soup.find_all('li', {"class": "uscb-list-attachment"})
        item = [item for item in items if "United States" in item.text.strip()][0].find_all("a")[0]
        download_href = item["href"]
        response = requests.get("https:"+download_href)

        with open(path_file_county_census_data, 'wb') as f:
            f.write(response.content)
    except:
        county_census_data_google_drive_url = "https://docs.google.com/spreadsheets/d/1-U0ZA8b1sYI1RlUIIvik_PELOz92TQaR/edit?usp=sharing&ouid=118247173478054444170&rtpof=true&sd=true"
        download_file_from_google_drive_share_link_to_file_path(county_census_data_google_drive_url, path_file_county_census_data)

def main(args):
    path_folder_data = args["path_folder_data"]
    path_folder_data_raw = os.path.join(path_folder_data,"raw")
    # determine if test or not:
    is_test_boolean = ("test" in path_folder_data)
    
    # get orders data
    offer_acceptance_offers_google_drive_url = "https://drive.google.com/file/d/1rDVII-KGJixTcYOL-eqHtDjmz_CRr5oA/view?usp=sharing"
    #offer_acceptance_offers_google_drive_url = "https://drive.google.com/file/d/17FWCWqGkhIwM7nHHLUNo1Ej2GnEJebmO/view?usp=sharing"
    file_name_offer_acceptance_offers = "offer_acceptance_offers.csv"
    path_file_offer_acceptance_offers = get_file_path(path_folder_data_raw, file_name_offer_acceptance_offers)
    download_file_from_google_drive_share_link_to_file_path(offer_acceptance_offers_google_drive_url, path_file_offer_acceptance_offers)

    # get offers data
    offer_acceptance_orders_google_drive_url = "https://drive.google.com/file/d/1-NkSnizxZPbSdgqru6r7ATU2NxmcoyhR/view?usp=sharing"
    file_name_offer_acceptance_orders = "offer_acceptance_orders.csv"
    path_file_offer_acceptance_orders = get_file_path(path_folder_data_raw, file_name_offer_acceptance_orders)
    download_file_from_google_drive_share_link_to_file_path(offer_acceptance_orders_google_drive_url, path_file_offer_acceptance_orders)

    if (is_test_boolean == False):
        # get carrier data
        carrier_data_google_drive_url = "https://drive.google.com/file/d/1F7Be4CTD64JqUjUwS_e5nt0bfU8s8p6D/view?usp=sharing"
        file_name_carrier_data = "carrier_data.csv"
        path_file_carrier_data = get_file_path(path_folder_data_raw, file_name_carrier_data)
        download_file_from_google_drive_share_link_to_file_path(carrier_data_google_drive_url, path_file_carrier_data)

        # get county weather data:
        get_county_weather_data(args)   


        # get county census data
        get_county_census_data(args)

#main({"path_folder_data":os.path.join(path_folder,'data')})

